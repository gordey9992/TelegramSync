name: üèóÔ∏è TelegramSync CI/CD

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3

jobs:
  build:
    name: üì¶ –°–±–æ—Ä–∫–∞ –ø–ª–∞–≥–∏–Ω–∞
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      uses: actions/checkout@v4
      
    - name: ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
      run: mvn -B clean compile --file pom.xml
      
    - name: üì¶ –°–æ–∑–¥–∞–Ω–∏–µ JAR —Ñ–∞–π–ª–∞
      run: mvn -B package --file pom.xml -DskipTests
      
    - name: ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ JAR —Ñ–∞–π–ª–∞
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ JAR..."
        jar tf target/TelegramSync-*.jar | grep -E "(plugin\.yml|config\.yml|messages\.yml)"
        echo "üéâ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä JAR
        JAR_SIZE=$(stat -c%s target/TelegramSync-*.jar)
        echo "üìä –†–∞–∑–º–µ—Ä JAR —Ñ–∞–π–ª–∞: $((JAR_SIZE / 1024)) KB"
        
    - name: üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
      uses: actions/upload-artifact@v4
      with:
        name: telegramsync-build
        path: |
          target/*.jar
          target/*-sources.jar
        retention-days: 30
        compression-level: 9
        
    - name: üìä –û—Ç—á–µ—Ç –æ —Å–±–æ—Ä–∫–µ
      run: |
        echo "=========================================="
        echo "üéâ –°–ë–û–†–ö–ê –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!"
        echo "=========================================="
        echo "üìÖ –í—Ä–µ–º—è: $(date)"
        echo "üî¢ –ù–æ–º–µ—Ä —Å–±–æ—Ä–∫–∏: ${{ github.run_number }}"
        echo "üéØ –í–µ—Ç–∫–∞: ${{ github.ref }}"
        echo "üîë –ö–æ–º–º–∏—Ç: ${{ github.sha }}"
        echo "üë§ –ê–≤—Ç–æ—Ä: ${{ github.actor }}"
        echo "=========================================="

  test:
    name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
      uses: actions/download-artifact@v4
      with:
        name: telegramsync-build
        
    - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
      run: |
        echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤:"
        ls -la
        echo ""
        echo "üìã –°–ø–∏—Å–æ–∫ JAR —Ñ–∞–π–ª–æ–≤:"
        find . -name "*.jar" -type f
        
    - name: üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
      run: |
        echo "üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω–∞..."
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        echo "‚úÖ –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

  quality:
    name: üìä –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      uses: actions/checkout@v4
      
    - name: ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
      run: |
        echo "üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
        REQUIRED_FILES=("pom.xml" "src/main/resources/plugin.yml" "src/main/resources/config.yml" "src/main/resources/messages.yml")
        
        for file in "${REQUIRED_FILES[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file - –Ω–∞–π–¥–µ–Ω"
          else
            echo "‚ùå $file - –û–¢–°–£–¢–°–¢–í–£–ï–¢!"
            exit 1
          fi
        done
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Java —Ñ–∞–π–ª—ã
        JAVA_FILES_COUNT=$(find src/main/java -name "*.java" | wc -l)
        echo "üìä –ù–∞–π–¥–µ–Ω–æ Java —Ñ–∞–π–ª–æ–≤: $JAVA_FILES_COUNT"
        
        if [ "$JAVA_FILES_COUNT" -eq "0" ]; then
          echo "‚ùå Java —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
          exit 1
        fi
        
        echo "üéâ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø–æ—Ä—è–¥–∫–µ!"
        
    - name: üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏
      run: |
        if [ ! -f "LICENSE" ]; then
          echo "‚ö†Ô∏è –§–∞–π–ª LICENSE –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º MIT –ª–∏—Ü–µ–Ω–∑–∏—é..."
          cat << 'EOF' > LICENSE
MIT License

Copyright (c) 2024 gordey9992

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
EOF
          echo "‚úÖ –§–∞–π–ª LICENSE —Å–æ–∑–¥–∞–Ω"
        else
          echo "‚úÖ –§–∞–π–ª LICENSE –Ω–∞–π–¥–µ–Ω"
        fi

  release:
    name: üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
    runs-on: ubuntu-latest
    needs: [build, test, quality]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
      uses: actions/download-artifact@v4
      with:
        name: telegramsync-build
        
    - name: üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ GitHub —Ä–µ–ª–∏–∑–∞
      uses: softprops/action-gh-release@v1
      with:
        files: |
          TelegramSync-*.jar
          TelegramSync-*-sources.jar
        body: |
          ## üéâ TelegramSync ${{ github.ref_name }}
          
          ### üöÄ –ß—Ç–æ –Ω–æ–≤–æ–≥–æ?
          - –£–ª—É—á—à–µ–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          - –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
          - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Ä–∞–±–æ—Ç–∞ —Å –ø–∞–º—è—Ç—å—é
          
          ### üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
          - –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π
          - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
          - –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª–∏–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
          
          ### ‚öôÔ∏è –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
          1. –°–∫–∞—á–∞–π—Ç–µ `TelegramSync-*.jar`
          2. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É `plugins/`
          3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ `config.yml`
          4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/tg —Ç–µ—Å—Ç` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
          
          ### üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
          ```bash
          /tg <—Å–æ–æ–±—â–µ–Ω–∏–µ>          # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram
          /telegramsync status     # –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏  
          /tgbroadcast <—Å–æ–æ–±—â–µ–Ω–∏–µ> # –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –≤ Telegram
          /telegramsync reload     # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥
          ```
          
          ### üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
          –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ Telegram –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ:
          - –°–æ–æ–±—â–µ–Ω–∏—è —Å `!` –≤ –Ω–∞—á–∞–ª–µ (`!–≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç`)
          - –ö–æ–º–∞–Ω–¥—ã `/tg`
          - –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–ª–∞–≥–∏–Ω–æ–≤ (XFilesPlugin –∏ –¥—Ä.)
          - –°–æ–±—ã—Ç–∏—è –∏–≥—Ä–æ–∫–æ–≤ (–≤—Ö–æ–¥/–≤—ã—Ö–æ–¥)
          
          ---
          **üìÖ –°–±–æ—Ä–∫–∞:** ${{ github.run_number }}  
          **üîó –ö–æ–º–º–∏—Ç:** [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})  
          **üë• –ê–≤—Ç–æ—Ä—ã:** [gordey9992](https://github.com/gordey9992) –∏ [DeepSeek](https://github.com/DeepSeek-AI)
        generate_release_notes: true
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-check:
    name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
      uses: actions/download-artifact@v4
      with:
        name: telegramsync-build
        
    - name: üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ
      run: |
        echo "=========================================="
        echo "üéØ –°–ë–û–†–ö–ê –ì–û–¢–û–í–ê –ö –î–ï–ü–õ–û–Æ!"
        echo "=========================================="
        echo "üì¶ –°–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        ls -la *.jar
        echo ""
        echo "üí° –î–ª—è –¥–µ–ø–ª–æ—è:"
        echo "1. –°–∫–∞—á–∞–π—Ç–µ JAR —Ñ–∞–π–ª—ã –≤—ã—à–µ"
        echo "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä"
        echo "3. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É plugins/"
        echo "4. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä"
        echo "=========================================="

  notify:
    name: üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    runs-on: ubuntu-latest
    needs: [build, test, quality]
    if: always()
    
    steps:
    - name: üìä –°—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏
      run: |
        echo "üìã –û–¢–ß–ï–¢ –û –°–ë–û–†–ö–ï"
        echo "================="
        
        if [ "${{ needs.build.result }}" == "success" ]; then
          echo "‚úÖ –°–±–æ—Ä–∫–∞: –£–°–ü–ï–®–ù–û"
        else
          echo "‚ùå –°–±–æ—Ä–∫–∞: –ü–†–û–í–ê–õ–ï–ù–û"
        fi
        
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –£–°–ü–ï–®–ù–û"
        else
          echo "‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–†–û–í–ê–õ–ï–ù–û"
        fi
        
        if [ "${{ needs.quality.result }}" == "success" ]; then
          echo "‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ: –£–°–ü–ï–®–ù–û"
        else
          echo "‚ùå –ö–∞—á–µ—Å—Ç–≤–æ: –ü–†–û–í–ê–õ–ï–ù–û"
        fi
        
        echo ""
        
        if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.quality.result }}" == "success" ]; then
          echo "üéâ –í–°–ï –≠–¢–ê–ü–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
          echo "üì¶ –ü–ª–∞–≥–∏–Ω –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
        else
          echo "‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–±–æ—Ä–∫–æ–π"
          echo "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
        fi
